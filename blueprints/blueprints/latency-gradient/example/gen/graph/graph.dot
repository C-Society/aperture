digraph  {
	subgraph cluster_s1 {
		label="ArithmeticCombinator[0]";margin="50.0";
		n4[label="2.00"];
		n2[label="lhs"];
		n5[label="output"];
		n3[label="rhs"];
		n4->n3;
		n3->n5[style="invis"];
		{rank=same; n2;n3;};
		{rank=same; n5;};
		
	}
	subgraph cluster_s6 {
		label="ArithmeticCombinator[1]";margin="50.0";
		n9[label="1.10"];
		n7[label="lhs"];
		n10[label="output"];
		n8[label="rhs"];
		n9->n8;
		n8->n10[style="invis"];
		{rank=same; n10;};
		{rank=same; n7;n8;};
		
	}
	subgraph cluster_s11 {
		label="ArithmeticCombinator[2]";margin="50.0";
		n13[label="2.00"];
		n12[label="lhs"];
		n15[label="output"];
		n14[label="rhs"];
		n13->n12;
		n14->n15[style="invis"];
		{rank=same; n12;n14;};
		{rank=same; n15;};
		
	}
	subgraph cluster_s16 {
		label="ArithmeticCombinator[3]";margin="50.0";
		n18[label="5.00"];
		n17[label="lhs"];
		n20[label="output"];
		n19[label="rhs"];
		n18->n17;
		n19->n20[style="invis"];
		{rank=same; n17;n19;};
		{rank=same; n20;};
		
	}
	subgraph cluster_s21 {
		label="ArithmeticCombinator[4]";margin="50.0";
		n22[label="lhs"];
		n24[label="output"];
		n23[label="rhs"];
		n23->n24[style="invis"];
		{rank=same; n22;n23;};
		{rank=same; n24;};
		
	}
	subgraph cluster_s52 {
		subgraph cluster_s56 {
			label="ConcurrencyActuator[12.ConcurrencyActuator]";margin="50.0";
			n58[label="1000.00"];
			n57[label="desired_concurrency"];
			n58->n57;
			{rank=same; n57;};
			
		}
		subgraph cluster_s53 {
			label="Scheduler[12.Scheduler]";margin="50.0";
			n54[label="accepted_concurrency"];
			n55[label="incoming_concurrency"];
			{rank=same; n54;n55;};
			
		}
		label="ConcurrencyLimiter[12]";margin="50.0";
		
	}
	subgraph cluster_s59 {
		label="Decider[13]";margin="50.0";
		n60[label="lhs"];
		n62[label="output"];
		n61[label="rhs"];
		n61->n62[style="invis"];
		{rank=same; n60;n61;};
		{rank=same; n62;};
		
	}
	subgraph cluster_s41 {
		label="EMA[10]";margin="50.0";
		n42[label="input"];
		n43[label="max_envelope"];
		n44[label="output"];
		n43->n44[style="invis"];
		{rank=same; n42;n43;};
		{rank=same; n44;};
		
	}
	subgraph cluster_s28 {
		label="FirstValid[6]";margin="50.0";
		n30[label="0.00"];
		n29[label="inputs"];
		n31[label="output"];
		n30->n29;
		n29->n31[style="invis"];
		{rank=same; n29;n29;};
		{rank=same; n31;};
		
	}
	subgraph cluster_s45 {
		label="Gradient[11]";margin="50.0";
		n49[label="control_variable"];
		n48[label="max"];
		n47[label="optimize"];
		n51[label="output"];
		n46[label="setpoint"];
		n50[label="signal"];
		n50->n51[style="invis"];
		{rank=same; n46;n47;n48;n49;n50;};
		{rank=same; n51;};
		
	}
	subgraph cluster_s32 {
		label="Max[7]";margin="50.0";
		n34[label="10.00"];
		n33[label="inputs"];
		n35[label="output"];
		n34->n33;
		n33->n35[style="invis"];
		{rank=same; n33;n33;};
		{rank=same; n35;};
		
	}
	subgraph cluster_s25 {
		label="Min[5]";margin="50.0";
		n26[label="inputs"];
		n27[label="output"];
		n26->n27[style="invis"];
		{rank=same; n26;n26;};
		{rank=same; n27;};
		
	}
	subgraph cluster_s39 {
		label="PromQL[9]";margin="50.0";
		n40[label="output"];
		{rank=same; n40;};
		
	}
	subgraph cluster_s36 {
		label="Sqrt[8]";margin="50.0";
		n37[label="input"];
		n38[label="output"];
		n37->n38[style="invis"];
		{rank=same; n37;};
		{rank=same; n38;};
		
	}
	subgraph cluster_s63 {
		label="Switcher[14]";margin="50.0";
		n65[label="100.00"];
		n66[label="on_false"];
		n64[label="on_true"];
		n68[label="output"];
		n67[label="switch"];
		n65->n64;
		n67->n68[style="invis"];
		{rank=same; n64;n66;n67;};
		{rank=same; n68;};
		
	}
	subgraph cluster_s69 {
		label="Switcher[15]";margin="50.0";
		n72[label="0.00"];
		n73[label="on_false"];
		n71[label="on_true"];
		n74[label="output"];
		n70[label="switch"];
		n72->n71;
		n73->n74[style="invis"];
		{rank=same; n74;};
		{rank=same; n70;n71;n73;};
		
	}
	rankdir="LR";splines="ortho";
	n54->n14[label="ACCEPTED_CONCURRENCY"];
	n54->n26[label="ACCEPTED_CONCURRENCY"];
	n54->n37[label="ACCEPTED_CONCURRENCY"];
	n54->n49[label="ACCEPTED_CONCURRENCY"];
	n10->n46[label="LATENCY_SETPOINT"];
	n10->n61[label="LATENCY_SETPOINT"];
	n20->n22[label="CONCURRENCY_INCREMENT_SINGLE_TICK"];
	n31->n66[label="CONCURRENCY_INCREMENT_NORMAL"];
	n31->n73[label="CONCURRENCY_INCREMENT_NORMAL"];
	n62->n67[label="IS_OVERLOAD_SWITCH"];
	n62->n70[label="IS_OVERLOAD_SWITCH"];
	n68->n47[label="CONCURRENCY_INCREMENT"];
	n74->n23[label="CONCURRENCY_INCREMENT_FEEDBACK"];
	n5->n43[label="MAX_EMA"];
	n15->n33[label="UPPER_CONCURRENCY_LIMIT"];
	n24->n26[label="CONCURRENCY_INCREMENT_INTEGRAL"];
	n40->n2[label="LATENCY"];
	n40->n42[label="LATENCY"];
	n40->n50[label="LATENCY"];
	n40->n60[label="LATENCY"];
	n27->n29[label="CONCURRENCY_INCREMENT_INTEGRAL_CAPPED"];
	n35->n48[label="MAX_CONCURRENCY"];
	n38->n19[label="SQRT_CONCURRENCY_INCREMENT"];
	n44->n7[label="LATENCY_EMA"];
	
}
