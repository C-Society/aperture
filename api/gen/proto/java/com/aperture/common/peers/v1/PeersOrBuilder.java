// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/common/peers/v1/peers.proto

package com.aperture.common.peers.v1;

public interface PeersOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.common.peers.v1.Peers)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.aperture.common.peers.v1.Peer self_peer = 1[json_name = "selfPeer"];</code>
   * @return Whether the selfPeer field is set.
   */
  boolean hasSelfPeer();
  /**
   * <code>.aperture.common.peers.v1.Peer self_peer = 1[json_name = "selfPeer"];</code>
   * @return The selfPeer.
   */
  com.aperture.common.peers.v1.Peer getSelfPeer();
  /**
   * <code>.aperture.common.peers.v1.Peer self_peer = 1[json_name = "selfPeer"];</code>
   */
  com.aperture.common.peers.v1.PeerOrBuilder getSelfPeerOrBuilder();

  /**
   * <code>map&lt;string, .aperture.common.peers.v1.Peer&gt; peers = 2[json_name = "peers"];</code>
   */
  int getPeersCount();
  /**
   * <code>map&lt;string, .aperture.common.peers.v1.Peer&gt; peers = 2[json_name = "peers"];</code>
   */
  boolean containsPeers(
      java.lang.String key);
  /**
   * Use {@link #getPeersMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.aperture.common.peers.v1.Peer>
  getPeers();
  /**
   * <code>map&lt;string, .aperture.common.peers.v1.Peer&gt; peers = 2[json_name = "peers"];</code>
   */
  java.util.Map<java.lang.String, com.aperture.common.peers.v1.Peer>
  getPeersMap();
  /**
   * <code>map&lt;string, .aperture.common.peers.v1.Peer&gt; peers = 2[json_name = "peers"];</code>
   */

  com.aperture.common.peers.v1.Peer getPeersOrDefault(
      java.lang.String key,
      com.aperture.common.peers.v1.Peer defaultValue);
  /**
   * <code>map&lt;string, .aperture.common.peers.v1.Peer&gt; peers = 2[json_name = "peers"];</code>
   */

  com.aperture.common.peers.v1.Peer getPeersOrThrow(
      java.lang.String key);
}
