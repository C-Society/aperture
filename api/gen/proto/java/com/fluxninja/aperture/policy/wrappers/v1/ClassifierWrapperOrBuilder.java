// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/policy/wrappers/v1/policy.proto

package com.fluxninja.aperture.policy.wrappers.v1;

public interface ClassifierWrapperOrBuilder extends
    // @@protoc_insertion_point(interface_extends:aperture.policy.wrappers.v1.ClassifierWrapper)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Classifier
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Classifier classifier = 1[json_name = "classifier"];</code>
   * @return Whether the classifier field is set.
   */
  boolean hasClassifier();
  /**
   * <pre>
   * Classifier
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Classifier classifier = 1[json_name = "classifier"];</code>
   * @return The classifier.
   */
  com.fluxninja.aperture.policy.language.v1.Classifier getClassifier();
  /**
   * <pre>
   * Classifier
   * </pre>
   *
   * <code>.aperture.policy.language.v1.Classifier classifier = 1[json_name = "classifier"];</code>
   */
  com.fluxninja.aperture.policy.language.v1.ClassifierOrBuilder getClassifierOrBuilder();

  /**
   * <pre>
   * Name of the Policy.
   * </pre>
   *
   * <code>string policy_name = 2[json_name = "policyName"];</code>
   * @return The policyName.
   */
  java.lang.String getPolicyName();
  /**
   * <pre>
   * Name of the Policy.
   * </pre>
   *
   * <code>string policy_name = 2[json_name = "policyName"];</code>
   * @return The bytes for policyName.
   */
  com.google.protobuf.ByteString
      getPolicyNameBytes();

  /**
   * <pre>
   * Hash of the entire Policy spec.
   * </pre>
   *
   * <code>string policy_hash = 3[json_name = "policyHash"];</code>
   * @return The policyHash.
   */
  java.lang.String getPolicyHash();
  /**
   * <pre>
   * Hash of the entire Policy spec.
   * </pre>
   *
   * <code>string policy_hash = 3[json_name = "policyHash"];</code>
   * @return The bytes for policyHash.
   */
  com.google.protobuf.ByteString
      getPolicyHashBytes();

  /**
   * <pre>
   * Index of the classifier within Policy.
   * </pre>
   *
   * <code>int64 classifier_index = 4[json_name = "classifierIndex"];</code>
   * @return The classifierIndex.
   */
  long getClassifierIndex();
}
