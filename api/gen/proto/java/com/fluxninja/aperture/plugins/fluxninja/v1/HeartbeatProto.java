// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aperture/plugins/fluxninja/v1/heartbeat.proto

package com.fluxninja.aperture.plugins.fluxninja.v1;

public final class HeartbeatProto {
  private HeartbeatProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_ReportRequest_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_ReportRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_ReportResponse_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_ReportResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_ControllerInfo_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_ControllerInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_ServicesList_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_ServicesList_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_Service_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_Service_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aperture_plugins_fluxninja_v1_OverlappingService_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aperture_plugins_fluxninja_v1_OverlappingService_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n-aperture/plugins/fluxninja/v1/heartbea" +
      "t.proto\022\035aperture.plugins.fluxninja.v1\032\"" +
      "aperture/common/info/v1/info.proto\032$aper" +
      "ture/common/peers/v1/peers.proto\032&apertu" +
      "re/common/status/v1/status.proto\032\034google" +
      "/api/annotations.proto\032\033google/protobuf/" +
      "empty.proto\"\256\004\n\rReportRequest\022G\n\014version" +
      "_info\030\001 \001(\0132$.aperture.common.info.v1.Ve" +
      "rsionInfoR\013versionInfo\022G\n\014process_info\030\002" +
      " \001(\0132$.aperture.common.info.v1.ProcessIn" +
      "foR\013processInfo\022>\n\thost_info\030\003 \001(\0132!.ape" +
      "rture.common.info.v1.HostInfoR\010hostInfo\022" +
      "\037\n\013agent_group\030\004 \001(\tR\nagentGroup\022V\n\017cont" +
      "roller_info\030\005 \001(\0132-.aperture.plugins.flu" +
      "xninja.v1.ControllerInfoR\016controllerInfo" +
      "\0225\n\005peers\030\006 \001(\0132\037.aperture.common.peers." +
      "v1.PeersR\005peers\022P\n\rservices_list\030\010 \001(\0132+" +
      ".aperture.plugins.fluxninja.v1.ServicesL" +
      "istR\014servicesList\022I\n\014all_statuses\030\t \001(\0132" +
      "&.aperture.common.status.v1.GroupStatusR" +
      "\013allStatuses\"\020\n\016ReportResponse\" \n\016Contro" +
      "llerInfo\022\016\n\002id\030\001 \001(\tR\002id\"\270\001\n\014ServicesLis" +
      "t\022B\n\010services\030\001 \003(\0132&.aperture.plugins.f" +
      "luxninja.v1.ServiceR\010services\022d\n\024overlap" +
      "ping_services\030\002 \003(\01321.aperture.plugins.f" +
      "luxninja.v1.OverlappingServiceR\023overlapp" +
      "ingServices\"D\n\007Service\022\022\n\004name\030\001 \001(\tR\004na" +
      "me\022%\n\016entities_count\030\002 \001(\005R\rentitiesCoun" +
      "t\"s\n\022OverlappingService\022\032\n\010service1\030\001 \001(" +
      "\tR\010service1\022\032\n\010service2\030\002 \001(\tR\010service2\022" +
      "%\n\016entities_count\030\003 \001(\005R\rentitiesCount2\243" +
      "\001\n\020FluxNinjaService\022\216\001\n\006Report\022,.apertur" +
      "e.plugins.fluxninja.v1.ReportRequest\032-.a" +
      "perture.plugins.fluxninja.v1.ReportRespo" +
      "nse\"\'\202\323\344\223\002!\"\034/plugins/fluxninja/v1/repor" +
      "t:\001*2\242\001\n\025ControllerInfoService\022\210\001\n\021GetCo" +
      "ntrollerInfo\022\026.google.protobuf.Empty\032-.a" +
      "perture.plugins.fluxninja.v1.ControllerI" +
      "nfo\",\202\323\344\223\002&\022$/plugins/fluxninja/v1/contr" +
      "ollerinfoB\256\002\n+com.fluxninja.aperture.plu" +
      "gins.fluxninja.v1B\016HeartbeatProtoP\001ZXgit" +
      "hub.com/fluxninja/aperture/api/gen/proto" +
      "/go/aperture/plugins/fluxninja/v1;fluxni" +
      "njav1\242\002\003APF\252\002\035Aperture.Plugins.Fluxninja" +
      ".V1\312\002\035Aperture\\Plugins\\Fluxninja\\V1\342\002)Ap" +
      "erture\\Plugins\\Fluxninja\\V1\\GPBMetadata\352" +
      "\002 Aperture::Plugins::Fluxninja::V1b\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.fluxninja.aperture.common.info.v1.InfoProto.getDescriptor(),
          com.fluxninja.aperture.common.peers.v1.PeersProto.getDescriptor(),
          com.fluxninja.aperture.common.status.v1.StatusProto.getDescriptor(),
          com.fluxninja.google.api.AnnotationsProto.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
        });
    internal_static_aperture_plugins_fluxninja_v1_ReportRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_aperture_plugins_fluxninja_v1_ReportRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_ReportRequest_descriptor,
        new java.lang.String[] { "VersionInfo", "ProcessInfo", "HostInfo", "AgentGroup", "ControllerInfo", "Peers", "ServicesList", "AllStatuses", });
    internal_static_aperture_plugins_fluxninja_v1_ReportResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_aperture_plugins_fluxninja_v1_ReportResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_ReportResponse_descriptor,
        new java.lang.String[] { });
    internal_static_aperture_plugins_fluxninja_v1_ControllerInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_aperture_plugins_fluxninja_v1_ControllerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_ControllerInfo_descriptor,
        new java.lang.String[] { "Id", });
    internal_static_aperture_plugins_fluxninja_v1_ServicesList_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_aperture_plugins_fluxninja_v1_ServicesList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_ServicesList_descriptor,
        new java.lang.String[] { "Services", "OverlappingServices", });
    internal_static_aperture_plugins_fluxninja_v1_Service_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_aperture_plugins_fluxninja_v1_Service_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_Service_descriptor,
        new java.lang.String[] { "Name", "EntitiesCount", });
    internal_static_aperture_plugins_fluxninja_v1_OverlappingService_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_aperture_plugins_fluxninja_v1_OverlappingService_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aperture_plugins_fluxninja_v1_OverlappingService_descriptor,
        new java.lang.String[] { "Service1", "Service2", "EntitiesCount", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.fluxninja.google.api.AnnotationsProto.http);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.fluxninja.aperture.common.info.v1.InfoProto.getDescriptor();
    com.fluxninja.aperture.common.peers.v1.PeersProto.getDescriptor();
    com.fluxninja.aperture.common.status.v1.StatusProto.getDescriptor();
    com.fluxninja.google.api.AnnotationsProto.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
