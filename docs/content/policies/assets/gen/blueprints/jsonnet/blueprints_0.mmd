flowchart LR
subgraph 0[<center>ArithmeticCombinator<br/>mul</center>]
subgraph 0_inports[ ]
style 0_inports fill:none,stroke:none
0lhs[lhs]
0rhs[rhs]
end
subgraph 0_outports[ ]
style 0_outports fill:none,stroke:none
0output[output]
end
end
FakeConstant0((2.00))
FakeConstant0 --> 0rhs
subgraph 1[<center>ArithmeticCombinator<br/>mul</center>]
subgraph 1_inports[ ]
style 1_inports fill:none,stroke:none
1lhs[lhs]
1rhs[rhs]
end
subgraph 1_outports[ ]
style 1_outports fill:none,stroke:none
1output[output]
end
end
FakeConstant1((1.10))
FakeConstant1 --> 1rhs
subgraph 2[<center>ArithmeticCombinator<br/>mul</center>]
subgraph 2_inports[ ]
style 2_inports fill:none,stroke:none
2rhs[rhs]
2lhs[lhs]
end
subgraph 2_outports[ ]
style 2_outports fill:none,stroke:none
2output[output]
end
end
FakeConstant2((2.00))
FakeConstant2 --> 2lhs
subgraph 3[<center>ArithmeticCombinator<br/>mul</center>]
subgraph 3_inports[ ]
style 3_inports fill:none,stroke:none
3rhs[rhs]
3lhs[lhs]
end
subgraph 3_outports[ ]
style 3_outports fill:none,stroke:none
3output[output]
end
end
FakeConstant3((1.10))
FakeConstant3 --> 3rhs
subgraph 4[<center>ArithmeticCombinator<br/>add</center>]
subgraph 4_inports[ ]
style 4_inports fill:none,stroke:none
4lhs[lhs]
4rhs[rhs]
end
subgraph 4_outports[ ]
style 4_outports fill:none,stroke:none
4output[output]
end
end
FakeConstant4((5.00))
FakeConstant4 --> 4lhs
subgraph 5[Max]
subgraph 5_inports[ ]
style 5_inports fill:none,stroke:none
5inputs[inputs]
5inputs[inputs]
end
subgraph 5_outports[ ]
style 5_outports fill:none,stroke:none
5output[output]
end
end
FakeConstant5((10.00))
FakeConstant5 --> 5inputs
subgraph 6[Sqrt]
subgraph 6_inports[ ]
style 6_inports fill:none,stroke:none
6input[input]
end
subgraph 6_outports[ ]
style 6_outports fill:none,stroke:none
6output[output]
end
end
subgraph 7[PromQL]
subgraph 7_outports[ ]
style 7_outports fill:none,stroke:none
7output[output]
end
end
subgraph 8[<center>EMA<br/>win: 1500s</center>]
subgraph 8_inports[ ]
style 8_inports fill:none,stroke:none
8input[input]
8max_envelope[max_envelope]
end
subgraph 8_outports[ ]
style 8_outports fill:none,stroke:none
8output[output]
end
end
subgraph 9[Gradient]
subgraph 9_inports[ ]
style 9_inports fill:none,stroke:none
9signal[signal]
9setpoint[setpoint]
9optimize[optimize]
9max[max]
9control_variable[control_variable]
end
subgraph 9_outports[ ]
style 9_outports fill:none,stroke:none
9output[output]
end
end
subgraph 10.Scheduler[<center>ConcurrencyLimiter/Scheduler<br/>service1-demo-ap...</center>]
subgraph 10.Scheduler_outports[ ]
style 10.Scheduler_outports fill:none,stroke:none
10.Schedulerincoming_concurrency[incoming_concurrency]
10.Scheduleraccepted_concurrency[accepted_concurrency]
end
end
subgraph 10.ConcurrencyActuator[<center>ConcurrencyLimiter/ConcurrencyActuator<br/>service1-demo-ap...</center>]
subgraph 10.ConcurrencyActuator_inports[ ]
style 10.ConcurrencyActuator_inports fill:none,stroke:none
10.ConcurrencyActuatordesired_concurrency[desired_concurrency]
end
end
subgraph 12[Switcher]
subgraph 12_inports[ ]
style 12_inports fill:none,stroke:none
12switch[switch]
12on_true[on_true]
12on_false[on_false]
end
subgraph 12_outports[ ]
style 12_outports fill:none,stroke:none
12output[output]
end
end
FakeConstant6((100.00))
FakeConstant6 --> 12on_true
subgraph 11[<center>Decider<br/>gt for 0s</center>]
subgraph 11_inports[ ]
style 11_inports fill:none,stroke:none
11lhs[lhs]
11rhs[rhs]
end
subgraph 11_outports[ ]
style 11_outports fill:none,stroke:none
11output[output]
end
end
6output --> 4rhs
7output --> 0lhs
7output --> 8input
7output --> 9signal
7output --> 11lhs
2output --> 5inputs
4output --> 12on_false
12output --> 9optimize
5output --> 9max
8output --> 1lhs
8output --> 3lhs
0output --> 8max_envelope
1output --> 9setpoint
10.Scheduleraccepted_concurrency --> 2rhs
10.Scheduleraccepted_concurrency --> 6input
10.Scheduleraccepted_concurrency --> 9control_variable
11output --> 12switch
3output --> 11rhs
9output --> 10.ConcurrencyActuatordesired_concurrency
